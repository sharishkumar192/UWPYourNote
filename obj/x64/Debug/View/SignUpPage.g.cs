#pragma checksum "D:\YourNote\UWPYourNote\View\SignUpPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "A9037D9267EFD167B1BE55FBF54A046A57B84C18AF59894D3DA2A9221DDCE4DD"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UWPYourNote.View
{
    partial class SignUpPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_TextBox_PlaceholderText(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.PlaceholderText = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_PasswordBox_Password(global::Windows.UI.Xaml.Controls.PasswordBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Password = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_PasswordBox_PasswordRevealMode(global::Windows.UI.Xaml.Controls.PasswordBox obj, global::Windows.UI.Xaml.Controls.PasswordRevealMode value)
            {
                obj.PasswordRevealMode = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_PasswordBox_PlaceholderText(global::Windows.UI.Xaml.Controls.PasswordBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.PlaceholderText = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj, global::System.Nullable<global::System.Boolean> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Boolean) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Boolean), targetNullValue);
                }
                obj.IsChecked = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SignUpPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ISignUpPage_Bindings
        {
            private global::UWPYourNote.View.SignUpPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBox obj5;
            private global::Windows.UI.Xaml.Controls.TextBox obj6;
            private global::Windows.UI.Xaml.Controls.PasswordBox obj7;
            private global::Windows.UI.Xaml.Controls.CheckBox obj8;
            private global::Windows.UI.Xaml.Controls.PasswordBox obj9;
            private global::Windows.UI.Xaml.Controls.StackPanel obj10;
            private global::Windows.UI.Xaml.Controls.HyperlinkButton obj11;
            private global::Windows.UI.Xaml.Controls.Button obj12;
            private global::Windows.UI.Xaml.Controls.Border obj13;
            private global::Windows.UI.Xaml.Controls.FontIcon obj14;
            private global::Windows.UI.Xaml.Controls.TextBlock obj15;
            private global::Windows.UI.Xaml.Controls.Border obj16;
            private global::Windows.UI.Xaml.Controls.FontIcon obj17;
            private global::Windows.UI.Xaml.Controls.TextBlock obj18;
            private global::Windows.UI.Xaml.Controls.Border obj19;
            private global::Windows.UI.Xaml.Controls.FontIcon obj20;
            private global::Windows.UI.Xaml.Controls.TextBlock obj21;
            private global::Windows.UI.Xaml.Controls.Border obj22;
            private global::Windows.UI.Xaml.Controls.FontIcon obj23;
            private global::Windows.UI.Xaml.Controls.TextBlock obj24;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.Controls.TextChangedEventHandler obj5TextChanged;
            private global::Windows.UI.Xaml.Controls.TextChangedEventHandler obj6TextChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj7PasswordChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj8Checked;
            private global::Windows.UI.Xaml.RoutedEventHandler obj8Unchecked;
            private global::Windows.UI.Xaml.RoutedEventHandler obj9PasswordChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj11Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj12Click;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj5PlaceholderTextDisabled = false;
            private static bool isobj5TextDisabled = false;
            private static bool isobj6PlaceholderTextDisabled = false;
            private static bool isobj6TextDisabled = false;
            private static bool isobj7PasswordDisabled = false;
            private static bool isobj7PasswordRevealModeDisabled = false;
            private static bool isobj7PlaceholderTextDisabled = false;
            private static bool isobj8IsCheckedDisabled = false;
            private static bool isobj9PasswordDisabled = false;
            private static bool isobj9PasswordRevealModeDisabled = false;
            private static bool isobj9PlaceholderTextDisabled = false;
            private static bool isobj10VisibilityDisabled = false;
            private static bool isobj13VisibilityDisabled = false;
            private static bool isobj14VisibilityDisabled = false;
            private static bool isobj15TextDisabled = false;
            private static bool isobj15VisibilityDisabled = false;
            private static bool isobj16VisibilityDisabled = false;
            private static bool isobj17VisibilityDisabled = false;
            private static bool isobj18TextDisabled = false;
            private static bool isobj18VisibilityDisabled = false;
            private static bool isobj19VisibilityDisabled = false;
            private static bool isobj20VisibilityDisabled = false;
            private static bool isobj21TextDisabled = false;
            private static bool isobj21VisibilityDisabled = false;
            private static bool isobj22VisibilityDisabled = false;
            private static bool isobj23VisibilityDisabled = false;
            private static bool isobj24TextDisabled = false;
            private static bool isobj24VisibilityDisabled = false;

            private SignUpPage_obj1_BindingsTracking bindingsTracking;

            public SignUpPage_obj1_Bindings()
            {
                this.bindingsTracking = new SignUpPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 91 && columnNumber == 25)
                {
                    isobj5PlaceholderTextDisabled = true;
                }
                else if (lineNumber == 93 && columnNumber == 25)
                {
                    isobj5TextDisabled = true;
                }
                else if (lineNumber == 94 && columnNumber == 25)
                {
                    this.obj5.TextChanged -= obj5TextChanged;
                }
                else if (lineNumber == 122 && columnNumber == 25)
                {
                    isobj6PlaceholderTextDisabled = true;
                }
                else if (lineNumber == 124 && columnNumber == 25)
                {
                    isobj6TextDisabled = true;
                }
                else if (lineNumber == 125 && columnNumber == 25)
                {
                    this.obj6.TextChanged -= obj6TextChanged;
                }
                else if (lineNumber == 154 && columnNumber == 25)
                {
                    isobj7PasswordDisabled = true;
                }
                else if (lineNumber == 156 && columnNumber == 25)
                {
                    isobj7PasswordRevealModeDisabled = true;
                }
                else if (lineNumber == 157 && columnNumber == 25)
                {
                    isobj7PlaceholderTextDisabled = true;
                }
                else if (lineNumber == 155 && columnNumber == 25)
                {
                    this.obj7.PasswordChanged -= obj7PasswordChanged;
                }
                else if (lineNumber == 188 && columnNumber == 25)
                {
                    isobj8IsCheckedDisabled = true;
                }
                else if (lineNumber == 187 && columnNumber == 25)
                {
                    this.obj8.Checked -= obj8Checked;
                }
                else if (lineNumber == 190 && columnNumber == 25)
                {
                    this.obj8.Unchecked -= obj8Unchecked;
                }
                else if (lineNumber == 200 && columnNumber == 25)
                {
                    isobj9PasswordDisabled = true;
                }
                else if (lineNumber == 202 && columnNumber == 25)
                {
                    isobj9PasswordRevealModeDisabled = true;
                }
                else if (lineNumber == 203 && columnNumber == 25)
                {
                    isobj9PlaceholderTextDisabled = true;
                }
                else if (lineNumber == 201 && columnNumber == 25)
                {
                    this.obj9.PasswordChanged -= obj9PasswordChanged;
                }
                else if (lineNumber == 257 && columnNumber == 25)
                {
                    isobj10VisibilityDisabled = true;
                }
                else if (lineNumber == 266 && columnNumber == 29)
                {
                    this.obj11.Click -= obj11Click;
                }
                else if (lineNumber == 242 && columnNumber == 29)
                {
                    this.obj12.Click -= obj12Click;
                }
                else if (lineNumber == 212 && columnNumber == 29)
                {
                    isobj13VisibilityDisabled = true;
                }
                else if (lineNumber == 216 && columnNumber == 33)
                {
                    isobj14VisibilityDisabled = true;
                }
                else if (lineNumber == 221 && columnNumber == 37)
                {
                    isobj15TextDisabled = true;
                }
                else if (lineNumber == 222 && columnNumber == 37)
                {
                    isobj15VisibilityDisabled = true;
                }
                else if (lineNumber == 166 && columnNumber == 29)
                {
                    isobj16VisibilityDisabled = true;
                }
                else if (lineNumber == 171 && columnNumber == 33)
                {
                    isobj17VisibilityDisabled = true;
                }
                else if (lineNumber == 176 && columnNumber == 37)
                {
                    isobj18TextDisabled = true;
                }
                else if (lineNumber == 177 && columnNumber == 37)
                {
                    isobj18VisibilityDisabled = true;
                }
                else if (lineNumber == 134 && columnNumber == 29)
                {
                    isobj19VisibilityDisabled = true;
                }
                else if (lineNumber == 138 && columnNumber == 33)
                {
                    isobj20VisibilityDisabled = true;
                }
                else if (lineNumber == 142 && columnNumber == 37)
                {
                    isobj21TextDisabled = true;
                }
                else if (lineNumber == 143 && columnNumber == 37)
                {
                    isobj21VisibilityDisabled = true;
                }
                else if (lineNumber == 101 && columnNumber == 29)
                {
                    isobj22VisibilityDisabled = true;
                }
                else if (lineNumber == 105 && columnNumber == 33)
                {
                    isobj23VisibilityDisabled = true;
                }
                else if (lineNumber == 109 && columnNumber == 37)
                {
                    isobj24TextDisabled = true;
                }
                else if (lineNumber == 110 && columnNumber == 37)
                {
                    isobj24VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 5: // View\SignUpPage.xaml line 87
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.obj5TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.TextChangedEventArgs p1) =>
                        {
                            this.dataRoot.NameBoxTextChanged();
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBox)target).TextChanged += obj5TextChanged;
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // View\SignUpPage.xaml line 117
                        this.obj6 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.obj6TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.TextChangedEventArgs p1) =>
                        {
                            this.dataRoot.EmailBoxTextChanged();
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBox)target).TextChanged += obj6TextChanged;
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 7: // View\SignUpPage.xaml line 151
                        this.obj7 = (global::Windows.UI.Xaml.Controls.PasswordBox)target;
                        this.obj7PasswordChanged = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PasswordBoxTextChanged();
                        };
                        ((global::Windows.UI.Xaml.Controls.PasswordBox)target).PasswordChanged += obj7PasswordChanged;
                        this.bindingsTracking.RegisterTwoWayListener_7(this.obj7);
                        break;
                    case 8: // View\SignUpPage.xaml line 184
                        this.obj8 = (global::Windows.UI.Xaml.Controls.CheckBox)target;
                        this.obj8Checked = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.RevealModeCheckBoxChecked();
                        };
                        ((global::Windows.UI.Xaml.Controls.CheckBox)target).Checked += obj8Checked;
                        this.obj8Unchecked = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.RevealModeCheckBoxChecked();
                        };
                        ((global::Windows.UI.Xaml.Controls.CheckBox)target).Unchecked += obj8Unchecked;
                        break;
                    case 9: // View\SignUpPage.xaml line 197
                        this.obj9 = (global::Windows.UI.Xaml.Controls.PasswordBox)target;
                        this.obj9PasswordChanged = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ConfirmPasswordBoxPasswordChanged();
                        };
                        ((global::Windows.UI.Xaml.Controls.PasswordBox)target).PasswordChanged += obj9PasswordChanged;
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 10: // View\SignUpPage.xaml line 251
                        this.obj10 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 11: // View\SignUpPage.xaml line 264
                        this.obj11 = (global::Windows.UI.Xaml.Controls.HyperlinkButton)target;
                        this.obj11Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.NavigateToSignInClick();
                        };
                        ((global::Windows.UI.Xaml.Controls.HyperlinkButton)target).Click += obj11Click;
                        break;
                    case 12: // View\SignUpPage.xaml line 239
                        this.obj12 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj12Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.CreateAccountClick();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj12Click;
                        break;
                    case 13: // View\SignUpPage.xaml line 208
                        this.obj13 = (global::Windows.UI.Xaml.Controls.Border)target;
                        break;
                    case 14: // View\SignUpPage.xaml line 213
                        this.obj14 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    case 15: // View\SignUpPage.xaml line 219
                        this.obj15 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 16: // View\SignUpPage.xaml line 162
                        this.obj16 = (global::Windows.UI.Xaml.Controls.Border)target;
                        break;
                    case 17: // View\SignUpPage.xaml line 168
                        this.obj17 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    case 18: // View\SignUpPage.xaml line 174
                        this.obj18 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 19: // View\SignUpPage.xaml line 130
                        this.obj19 = (global::Windows.UI.Xaml.Controls.Border)target;
                        break;
                    case 20: // View\SignUpPage.xaml line 135
                        this.obj20 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    case 21: // View\SignUpPage.xaml line 140
                        this.obj21 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 22: // View\SignUpPage.xaml line 97
                        this.obj22 = (global::Windows.UI.Xaml.Controls.Border)target;
                        break;
                    case 23: // View\SignUpPage.xaml line 102
                        this.obj23 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    case 24: // View\SignUpPage.xaml line 107
                        this.obj24 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ISignUpPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::UWPYourNote.View.SignUpPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::UWPYourNote.View.SignUpPage obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_NameBoxPlaceHolderText(obj.NameBoxPlaceHolderText, phase);
                        this.Update_NameBoxContent(obj.NameBoxContent, phase);
                        this.Update_EmailBoxPlaceHolderText(obj.EmailBoxPlaceHolderText, phase);
                        this.Update_EmailBoxContent(obj.EmailBoxContent, phase);
                        this.Update_PasswordBoxPassword(obj.PasswordBoxPassword, phase);
                        this.Update_PasswordBoxRevealMode(obj.PasswordBoxRevealMode, phase);
                        this.Update_PasswordBoxPlaceHolderText(obj.PasswordBoxPlaceHolderText, phase);
                        this.Update_RevealModeCheckBoxIsChecked(obj.RevealModeCheckBoxIsChecked, phase);
                        this.Update_ConfirmPasswordBoxPassword(obj.ConfirmPasswordBoxPassword, phase);
                        this.Update_ConfirmPasswordBoxRevealMode(obj.ConfirmPasswordBoxRevealMode, phase);
                        this.Update_ConfirmPasswordBoxPlaceHolderText(obj.ConfirmPasswordBoxPlaceHolderText, phase);
                        this.Update_NavigateToSignInContainerVisibility(obj.NavigateToSignInContainerVisibility, phase);
                        this.Update_ConfirmPasswordCheckBorderVisibility(obj.ConfirmPasswordCheckBorderVisibility, phase);
                        this.Update_ConfirmPasswordCheckVisibility(obj.ConfirmPasswordCheckVisibility, phase);
                        this.Update_ConfirmPasswordToolTipContent(obj.ConfirmPasswordToolTipContent, phase);
                        this.Update_ConfirmPasswordToolTipVisibility(obj.ConfirmPasswordToolTipVisibility, phase);
                        this.Update_PasswordCheckBorderVisbility(obj.PasswordCheckBorderVisbility, phase);
                        this.Update_PasswordCheckVisibility(obj.PasswordCheckVisibility, phase);
                        this.Update_PasswordToolTipContent(obj.PasswordToolTipContent, phase);
                        this.Update_PasswordToolTipVisibility(obj.PasswordToolTipVisibility, phase);
                        this.Update_EmailCheckBorderVisibility(obj.EmailCheckBorderVisibility, phase);
                        this.Update_EmailCheckVisibility(obj.EmailCheckVisibility, phase);
                        this.Update_EmailToolTipContent(obj.EmailToolTipContent, phase);
                        this.Update_EmailToolTipVisibility(obj.EmailToolTipVisibility, phase);
                        this.Update_NameCheckBorderVisibility(obj.NameCheckBorderVisibility, phase);
                        this.Update_NameCheckVisibility(obj.NameCheckVisibility, phase);
                        this.Update_NameToolTipContent(obj.NameToolTipContent, phase);
                        this.Update_NameToolTipVisibility(obj.NameToolTipVisibility, phase);
                    }
                }
            }
            private void Update_NameBoxPlaceHolderText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 87
                    if (!isobj5PlaceholderTextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_PlaceholderText(this.obj5, obj, null);
                    }
                }
            }
            private void Update_NameBoxContent(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 87
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj5, obj, null);
                    }
                }
            }
            private void Update_EmailBoxPlaceHolderText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 117
                    if (!isobj6PlaceholderTextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_PlaceholderText(this.obj6, obj, null);
                    }
                }
            }
            private void Update_EmailBoxContent(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 117
                    if (!isobj6TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj6, obj, null);
                    }
                }
            }
            private void Update_PasswordBoxPassword(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 151
                    if (!isobj7PasswordDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PasswordBox_Password(this.obj7, obj, null);
                    }
                }
            }
            private void Update_PasswordBoxRevealMode(global::Windows.UI.Xaml.Controls.PasswordRevealMode obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 151
                    if (!isobj7PasswordRevealModeDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PasswordBox_PasswordRevealMode(this.obj7, obj);
                    }
                }
            }
            private void Update_PasswordBoxPlaceHolderText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 151
                    if (!isobj7PlaceholderTextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PasswordBox_PlaceholderText(this.obj7, obj, null);
                    }
                }
            }
            private void Update_RevealModeCheckBoxIsChecked(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 184
                    if (!isobj8IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj8, obj, null);
                    }
                }
            }
            private void Update_ConfirmPasswordBoxPassword(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 197
                    if (!isobj9PasswordDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PasswordBox_Password(this.obj9, obj, null);
                    }
                }
            }
            private void Update_ConfirmPasswordBoxRevealMode(global::Windows.UI.Xaml.Controls.PasswordRevealMode obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 197
                    if (!isobj9PasswordRevealModeDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PasswordBox_PasswordRevealMode(this.obj9, obj);
                    }
                }
            }
            private void Update_ConfirmPasswordBoxPlaceHolderText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 197
                    if (!isobj9PlaceholderTextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PasswordBox_PlaceholderText(this.obj9, obj, null);
                    }
                }
            }
            private void Update_NavigateToSignInContainerVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 251
                    if (!isobj10VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj10, obj);
                    }
                }
            }
            private void Update_ConfirmPasswordCheckBorderVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 208
                    if (!isobj13VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj13, obj);
                    }
                }
            }
            private void Update_ConfirmPasswordCheckVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 213
                    if (!isobj14VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj14, obj);
                    }
                }
            }
            private void Update_ConfirmPasswordToolTipContent(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 219
                    if (!isobj15TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj15, obj, null);
                    }
                }
            }
            private void Update_ConfirmPasswordToolTipVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 219
                    if (!isobj15VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj15, obj);
                    }
                }
            }
            private void Update_PasswordCheckBorderVisbility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 162
                    if (!isobj16VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj16, obj);
                    }
                }
            }
            private void Update_PasswordCheckVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 168
                    if (!isobj17VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj17, obj);
                    }
                }
            }
            private void Update_PasswordToolTipContent(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 174
                    if (!isobj18TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj18, obj, null);
                    }
                }
            }
            private void Update_PasswordToolTipVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 174
                    if (!isobj18VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj18, obj);
                    }
                }
            }
            private void Update_EmailCheckBorderVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 130
                    if (!isobj19VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj19, obj);
                    }
                }
            }
            private void Update_EmailCheckVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 135
                    if (!isobj20VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj20, obj);
                    }
                }
            }
            private void Update_EmailToolTipContent(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 140
                    if (!isobj21TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj21, obj, null);
                    }
                }
            }
            private void Update_EmailToolTipVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 140
                    if (!isobj21VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj21, obj);
                    }
                }
            }
            private void Update_NameCheckBorderVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 97
                    if (!isobj22VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj22, obj);
                    }
                }
            }
            private void Update_NameCheckVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 102
                    if (!isobj23VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj23, obj);
                    }
                }
            }
            private void Update_NameToolTipContent(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 107
                    if (!isobj24TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj24, obj, null);
                    }
                }
            }
            private void Update_NameToolTipVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignUpPage.xaml line 107
                    if (!isobj24VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj24, obj);
                    }
                }
            }
            private void UpdateTwoWay_5_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.NameBoxContent = this.obj5.Text;
                    }
                }
            }
            private void UpdateTwoWay_6_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.EmailBoxContent = this.obj6.Text;
                    }
                }
            }
            private void UpdateTwoWay_7_Password()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.PasswordBoxPassword = this.obj7.Password;
                    }
                }
            }
            private void UpdateTwoWay_9_Password()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.ConfirmPasswordBoxPassword = this.obj9.Password;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SignUpPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<SignUpPage_obj1_Bindings> weakRefToBindingObj; 

                public SignUpPage_obj1_BindingsTracking(SignUpPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SignUpPage_obj1_Bindings>(obj);
                }

                public SignUpPage_obj1_Bindings TryGetBindingObject()
                {
                    SignUpPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SignUpPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::UWPYourNote.View.SignUpPage obj = sender as global::UWPYourNote.View.SignUpPage;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_NameBoxPlaceHolderText(obj.NameBoxPlaceHolderText, DATA_CHANGED);
                                bindings.Update_NameBoxContent(obj.NameBoxContent, DATA_CHANGED);
                                bindings.Update_EmailBoxPlaceHolderText(obj.EmailBoxPlaceHolderText, DATA_CHANGED);
                                bindings.Update_EmailBoxContent(obj.EmailBoxContent, DATA_CHANGED);
                                bindings.Update_PasswordBoxPassword(obj.PasswordBoxPassword, DATA_CHANGED);
                                bindings.Update_PasswordBoxRevealMode(obj.PasswordBoxRevealMode, DATA_CHANGED);
                                bindings.Update_PasswordBoxPlaceHolderText(obj.PasswordBoxPlaceHolderText, DATA_CHANGED);
                                bindings.Update_RevealModeCheckBoxIsChecked(obj.RevealModeCheckBoxIsChecked, DATA_CHANGED);
                                bindings.Update_ConfirmPasswordBoxPassword(obj.ConfirmPasswordBoxPassword, DATA_CHANGED);
                                bindings.Update_ConfirmPasswordBoxRevealMode(obj.ConfirmPasswordBoxRevealMode, DATA_CHANGED);
                                bindings.Update_ConfirmPasswordBoxPlaceHolderText(obj.ConfirmPasswordBoxPlaceHolderText, DATA_CHANGED);
                                bindings.Update_NavigateToSignInContainerVisibility(obj.NavigateToSignInContainerVisibility, DATA_CHANGED);
                                bindings.Update_ConfirmPasswordCheckBorderVisibility(obj.ConfirmPasswordCheckBorderVisibility, DATA_CHANGED);
                                bindings.Update_ConfirmPasswordCheckVisibility(obj.ConfirmPasswordCheckVisibility, DATA_CHANGED);
                                bindings.Update_ConfirmPasswordToolTipContent(obj.ConfirmPasswordToolTipContent, DATA_CHANGED);
                                bindings.Update_ConfirmPasswordToolTipVisibility(obj.ConfirmPasswordToolTipVisibility, DATA_CHANGED);
                                bindings.Update_PasswordCheckBorderVisbility(obj.PasswordCheckBorderVisbility, DATA_CHANGED);
                                bindings.Update_PasswordCheckVisibility(obj.PasswordCheckVisibility, DATA_CHANGED);
                                bindings.Update_PasswordToolTipContent(obj.PasswordToolTipContent, DATA_CHANGED);
                                bindings.Update_PasswordToolTipVisibility(obj.PasswordToolTipVisibility, DATA_CHANGED);
                                bindings.Update_EmailCheckBorderVisibility(obj.EmailCheckBorderVisibility, DATA_CHANGED);
                                bindings.Update_EmailCheckVisibility(obj.EmailCheckVisibility, DATA_CHANGED);
                                bindings.Update_EmailToolTipContent(obj.EmailToolTipContent, DATA_CHANGED);
                                bindings.Update_EmailToolTipVisibility(obj.EmailToolTipVisibility, DATA_CHANGED);
                                bindings.Update_NameCheckBorderVisibility(obj.NameCheckBorderVisibility, DATA_CHANGED);
                                bindings.Update_NameCheckVisibility(obj.NameCheckVisibility, DATA_CHANGED);
                                bindings.Update_NameToolTipContent(obj.NameToolTipContent, DATA_CHANGED);
                                bindings.Update_NameToolTipVisibility(obj.NameToolTipVisibility, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "NameBoxPlaceHolderText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NameBoxPlaceHolderText(obj.NameBoxPlaceHolderText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NameBoxContent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NameBoxContent(obj.NameBoxContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EmailBoxPlaceHolderText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EmailBoxPlaceHolderText(obj.EmailBoxPlaceHolderText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EmailBoxContent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EmailBoxContent(obj.EmailBoxContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PasswordBoxPassword":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PasswordBoxPassword(obj.PasswordBoxPassword, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PasswordBoxRevealMode":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PasswordBoxRevealMode(obj.PasswordBoxRevealMode, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PasswordBoxPlaceHolderText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PasswordBoxPlaceHolderText(obj.PasswordBoxPlaceHolderText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RevealModeCheckBoxIsChecked":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_RevealModeCheckBoxIsChecked(obj.RevealModeCheckBoxIsChecked, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ConfirmPasswordBoxPassword":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ConfirmPasswordBoxPassword(obj.ConfirmPasswordBoxPassword, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ConfirmPasswordBoxRevealMode":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ConfirmPasswordBoxRevealMode(obj.ConfirmPasswordBoxRevealMode, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ConfirmPasswordBoxPlaceHolderText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ConfirmPasswordBoxPlaceHolderText(obj.ConfirmPasswordBoxPlaceHolderText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NavigateToSignInContainerVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NavigateToSignInContainerVisibility(obj.NavigateToSignInContainerVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ConfirmPasswordCheckBorderVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ConfirmPasswordCheckBorderVisibility(obj.ConfirmPasswordCheckBorderVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ConfirmPasswordCheckVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ConfirmPasswordCheckVisibility(obj.ConfirmPasswordCheckVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ConfirmPasswordToolTipContent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ConfirmPasswordToolTipContent(obj.ConfirmPasswordToolTipContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ConfirmPasswordToolTipVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ConfirmPasswordToolTipVisibility(obj.ConfirmPasswordToolTipVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PasswordCheckBorderVisbility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PasswordCheckBorderVisbility(obj.PasswordCheckBorderVisbility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PasswordCheckVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PasswordCheckVisibility(obj.PasswordCheckVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PasswordToolTipContent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PasswordToolTipContent(obj.PasswordToolTipContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PasswordToolTipVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PasswordToolTipVisibility(obj.PasswordToolTipVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EmailCheckBorderVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EmailCheckBorderVisibility(obj.EmailCheckBorderVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EmailCheckVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EmailCheckVisibility(obj.EmailCheckVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EmailToolTipContent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EmailToolTipContent(obj.EmailToolTipContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EmailToolTipVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EmailToolTipVisibility(obj.EmailToolTipVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NameCheckBorderVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NameCheckBorderVisibility(obj.NameCheckBorderVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NameCheckVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NameCheckVisibility(obj.NameCheckVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NameToolTipContent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NameToolTipContent(obj.NameToolTipContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NameToolTipVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NameToolTipVisibility(obj.NameToolTipVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::UWPYourNote.View.SignUpPage obj)
                {
                    SignUpPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void RegisterTwoWayListener_5(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_6(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_7(global::Windows.UI.Xaml.Controls.PasswordBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_Password();
                        }
                    };
                }
                public void RegisterTwoWayListener_9(global::Windows.UI.Xaml.Controls.PasswordBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_Password();
                        }
                    };
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // View\SignUpPage.xaml line 15
                {
                    this.SignUpPageScrollViewer = (global::Windows.UI.Xaml.Controls.ScrollViewer)(target);
                }
                break;
            case 3: // View\SignUpPage.xaml line 26
                {
                    this.Grid123 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 4: // View\SignUpPage.xaml line 41
                {
                    this.Title = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 5: // View\SignUpPage.xaml line 87
                {
                    this.NameBox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 6: // View\SignUpPage.xaml line 117
                {
                    this.EmailBox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 7: // View\SignUpPage.xaml line 151
                {
                    this.PasswordBox = (global::Windows.UI.Xaml.Controls.PasswordBox)(target);
                }
                break;
            case 8: // View\SignUpPage.xaml line 184
                {
                    this.RevealModeCheckBox = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                }
                break;
            case 9: // View\SignUpPage.xaml line 197
                {
                    this.ConfirmPasswordBox = (global::Windows.UI.Xaml.Controls.PasswordBox)(target);
                }
                break;
            case 10: // View\SignUpPage.xaml line 251
                {
                    this.NavigateToSignInContainer = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 11: // View\SignUpPage.xaml line 264
                {
                    this.NavigateToSignIn = (global::Windows.UI.Xaml.Controls.HyperlinkButton)(target);
                }
                break;
            case 12: // View\SignUpPage.xaml line 239
                {
                    this.CreateAccount = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 13: // View\SignUpPage.xaml line 208
                {
                    this.ConfirmPasswordCheckBorder = (global::Windows.UI.Xaml.Controls.Border)(target);
                }
                break;
            case 14: // View\SignUpPage.xaml line 213
                {
                    this.ConfirmPasswordCheck = (global::Windows.UI.Xaml.Controls.FontIcon)(target);
                }
                break;
            case 15: // View\SignUpPage.xaml line 219
                {
                    this.ConfirmPasswordToolTip = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 16: // View\SignUpPage.xaml line 162
                {
                    this.PasswordCheckBorder = (global::Windows.UI.Xaml.Controls.Border)(target);
                }
                break;
            case 17: // View\SignUpPage.xaml line 168
                {
                    this.PasswordCheck = (global::Windows.UI.Xaml.Controls.FontIcon)(target);
                }
                break;
            case 18: // View\SignUpPage.xaml line 174
                {
                    this.PasswordToolTip = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 19: // View\SignUpPage.xaml line 130
                {
                    this.EmailCheckBorder = (global::Windows.UI.Xaml.Controls.Border)(target);
                }
                break;
            case 20: // View\SignUpPage.xaml line 135
                {
                    this.EmailCheck = (global::Windows.UI.Xaml.Controls.FontIcon)(target);
                }
                break;
            case 21: // View\SignUpPage.xaml line 140
                {
                    this.EmailToolTip = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 22: // View\SignUpPage.xaml line 97
                {
                    this.NameCheckBorder = (global::Windows.UI.Xaml.Controls.Border)(target);
                }
                break;
            case 23: // View\SignUpPage.xaml line 102
                {
                    this.NameCheck = (global::Windows.UI.Xaml.Controls.FontIcon)(target);
                }
                break;
            case 24: // View\SignUpPage.xaml line 107
                {
                    this.NameToolTip = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 25: // View\SignUpPage.xaml line 280
                {
                    this.NarrowLayout = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 26: // View\SignUpPage.xaml line 289
                {
                    this.WideLayout = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // View\SignUpPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    SignUpPage_obj1_Bindings bindings = new SignUpPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

