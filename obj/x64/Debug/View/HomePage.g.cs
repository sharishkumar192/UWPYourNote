#pragma checksum "D:\YourNote\UWPYourNote\View\HomePage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "2A974290851C6075957F8D53960E2B942226CBE05510C3BA9AE9F0DB4E8BEFF8"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UWPYourNote.View
{
    partial class HomePage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Popup_IsOpen(global::Windows.UI.Xaml.Controls.Primitives.Popup obj, global::System.Boolean value)
            {
                obj.IsOpen = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Width(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Width = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Height(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Height = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_IsTapEnabled(global::Windows.UI.Xaml.UIElement obj, global::System.Boolean value)
            {
                obj.IsTapEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Panel_Background(global::Windows.UI.Xaml.Controls.Panel obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ContentControl_Content(global::Windows.UI.Xaml.Controls.ContentControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Int32 value)
            {
                obj.SelectedIndex = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem obj, global::System.Boolean value)
            {
                obj.IsSelected = value;
            }
            public static void Set_Windows_UI_Xaml_Shapes_Shape_Fill(global::Windows.UI.Xaml.Shapes.Shape obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Fill = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class HomePage_obj3_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IHomePage_Bindings
        {
            private global::UWPYourNoteLibrary.Models.Note dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj3;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4FillDisabled = false;
            private static bool isobj5TextDisabled = false;

            private HomePage_obj3_BindingsTracking bindingsTracking;

            public HomePage_obj3_Bindings()
            {
                this.bindingsTracking = new HomePage_obj3_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 44 && columnNumber == 21)
                {
                    isobj4FillDisabled = true;
                }
                else if (lineNumber == 51 && columnNumber == 21)
                {
                    isobj5TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // View\HomePage.xaml line 37
                        this.obj3 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 4: // View\HomePage.xaml line 41
                        this.obj4 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 5: // View\HomePage.xaml line 46
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj3.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::UWPYourNoteLibrary.Models.Note) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IHomePage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::UWPYourNoteLibrary.Models.Note)newDataRoot;
                    return true;
                }
                return false;
            }

            private bool TryGet_noteColor(out global::System.Int64 val)
            {
                global::UWPYourNoteLibrary.Models.Note obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.noteColor;
                    return true;
                }
                else
                {
                    val = default(global::System.Int64);
                    return false;
                }
            }

            private bool TryGet_(out global::UWPYourNoteLibrary.Models.Note val)
            {
                val = this.dataRoot;
                return true;
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(int phase)
            {
                global::System.Int64 p0;
                if (!TryGet_noteColor(out p0)) { return; }
                global::Windows.UI.Xaml.Media.SolidColorBrush result = global::UWPYourNoteLibrary.Util.NotesUtilities.GetSolidColorBrush(p0);
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\HomePage.xaml line 41
                    if (!isobj4FillDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj4, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::UWPYourNoteLibrary.Models.Note obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_noteColor(obj.noteColor, phase);
                        this.Update_title(obj.title, phase);
                    }
                }
                this.Update_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(phase);
                this.CompleteUpdate(phase);
            }
            private void Update_noteColor(global::System.Int64 obj, int phase)
            {
                this.Update_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(phase);
            }
            private void Update_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    if (!isobj4FillDisabled)
                    {
                        this.PendingFunctionBindings["UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749"] = new InvokeFunctionDelegate(this.Invoke_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749); 
                    }
                }
            }
            private void Update_title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\HomePage.xaml line 46
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class HomePage_obj3_BindingsTracking
            {
                private global::System.WeakReference<HomePage_obj3_Bindings> weakRefToBindingObj; 

                public HomePage_obj3_BindingsTracking(HomePage_obj3_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<HomePage_obj3_Bindings>(obj);
                }

                public HomePage_obj3_Bindings TryGetBindingObject()
                {
                    HomePage_obj3_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                }

            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class HomePage_obj7_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IHomePage_Bindings
        {
            private global::UWPYourNoteLibrary.Models.Note dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj7;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj8;
            private global::Windows.UI.Xaml.Controls.TextBlock obj9;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj8FillDisabled = false;
            private static bool isobj9TextDisabled = false;

            private HomePage_obj7_BindingsTracking bindingsTracking;

            public HomePage_obj7_Bindings()
            {
                this.bindingsTracking = new HomePage_obj7_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 25 && columnNumber == 21)
                {
                    isobj8FillDisabled = true;
                }
                else if (lineNumber == 31 && columnNumber == 21)
                {
                    isobj9TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7: // View\HomePage.xaml line 16
                        this.obj7 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 8: // View\HomePage.xaml line 22
                        this.obj8 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 9: // View\HomePage.xaml line 26
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj7.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::UWPYourNoteLibrary.Models.Note) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IHomePage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::UWPYourNoteLibrary.Models.Note)newDataRoot;
                    return true;
                }
                return false;
            }

            private bool TryGet_noteColor(out global::System.Int64 val)
            {
                global::UWPYourNoteLibrary.Models.Note obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.noteColor;
                    return true;
                }
                else
                {
                    val = default(global::System.Int64);
                    return false;
                }
            }

            private bool TryGet_(out global::UWPYourNoteLibrary.Models.Note val)
            {
                val = this.dataRoot;
                return true;
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(int phase)
            {
                global::System.Int64 p0;
                if (!TryGet_noteColor(out p0)) { return; }
                global::Windows.UI.Xaml.Media.SolidColorBrush result = global::UWPYourNoteLibrary.Util.NotesUtilities.GetSolidColorBrush(p0);
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\HomePage.xaml line 22
                    if (!isobj8FillDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj8, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::UWPYourNoteLibrary.Models.Note obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_noteColor(obj.noteColor, phase);
                        this.Update_title(obj.title, phase);
                    }
                }
                this.Update_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(phase);
                this.CompleteUpdate(phase);
            }
            private void Update_noteColor(global::System.Int64 obj, int phase)
            {
                this.Update_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(phase);
            }
            private void Update_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    if (!isobj8FillDisabled)
                    {
                        this.PendingFunctionBindings["UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749"] = new InvokeFunctionDelegate(this.Invoke_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749); 
                    }
                }
            }
            private void Update_title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\HomePage.xaml line 26
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj9, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class HomePage_obj7_BindingsTracking
            {
                private global::System.WeakReference<HomePage_obj7_Bindings> weakRefToBindingObj; 

                public HomePage_obj7_BindingsTracking(HomePage_obj7_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<HomePage_obj7_Bindings>(obj);
                }

                public HomePage_obj7_Bindings TryGetBindingObject()
                {
                    HomePage_obj7_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                }

            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class HomePage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IHomePage_Bindings
        {
            private global::UWPYourNote.View.HomePage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.GridView obj10;
            private global::Windows.UI.Xaml.Controls.Primitives.Popup obj11;
            private global::UWPYourNote.View.usercontrol.NoteContent obj12;
            private global::Windows.UI.Xaml.Controls.TextBlock obj17;
            private global::Windows.UI.Xaml.Controls.Grid obj18;
            private global::Windows.UI.Xaml.Controls.TextBox obj19;
            private global::Windows.UI.Xaml.Controls.RichEditBox obj20;
            private global::Windows.UI.Xaml.Controls.Grid obj21;
            private global::UWPYourNote.View.usercontrol.NoteEditOptionsControl obj22;
            private global::Windows.UI.Xaml.Controls.Button obj23;
            private global::Windows.UI.Xaml.Controls.ListBox obj24;
            private global::Windows.UI.Xaml.Controls.StackPanel obj25;
            private global::Windows.UI.Xaml.Controls.Button obj26;
            private global::Windows.UI.Xaml.Controls.TextBox obj27;
            private global::Windows.UI.Xaml.Controls.Primitives.Popup obj28;
            private global::Windows.UI.Xaml.Controls.ListView obj30;
            private global::Windows.UI.Xaml.Controls.ListBoxItem obj31;
            private global::Windows.UI.Xaml.Controls.ListBoxItem obj32;
            private global::Windows.UI.Xaml.Controls.ListBoxItem obj33;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj10ItemClick;
            private global::System.EventHandler<global::System.Object> obj11Closed;
            private global::System.EventHandler<global::System.Object> obj11LayoutUpdated;
            private global::System.EventHandler<global::System.Object> obj11Opened;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj12Tapped;
            private global::Windows.UI.Xaml.Controls.TextChangedEventHandler obj19TextChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj20GotFocus;
            private global::Windows.UI.Xaml.RoutedEventHandler obj20TextChanged;
            private global::System.Action<global::System.String> obj22EditOptions;
            private global::Windows.UI.Xaml.RoutedEventHandler obj23Click;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj24SelectionChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj25LostFocus;
            private global::Windows.UI.Xaml.RoutedEventHandler obj26Click;
            private global::Windows.UI.Xaml.Controls.TextChangedEventHandler obj27TextChanged;
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj30ItemClick;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj10ItemsSourceDisabled = false;
            private static bool isobj11IsOpenDisabled = false;
            private static bool isobj12WidthDisabled = false;
            private static bool isobj12HeightDisabled = false;
            private static bool isobj12IsTapEnabledDisabled = false;
            private static bool isobj17TextDisabled = false;
            private static bool isobj18BackgroundDisabled = false;
            private static bool isobj18VisibilityDisabled = false;
            private static bool isobj19TextDisabled = false;
            private static bool isobj19VisibilityDisabled = false;
            private static bool isobj21VisibilityDisabled = false;
            private static bool isobj23ContentDisabled = false;
            private static bool isobj24SelectedIndexDisabled = false;
            private static bool isobj27TextDisabled = false;
            private static bool isobj28IsOpenDisabled = false;
            private static bool isobj30ItemsSourceDisabled = false;
            private static bool isobj30VisibilityDisabled = false;
            private static bool isobj31IsSelectedDisabled = false;
            private static bool isobj32IsSelectedDisabled = false;
            private static bool isobj33IsSelectedDisabled = false;

            private HomePage_obj1_BindingsTracking bindingsTracking;

            public HomePage_obj1_Bindings()
            {
                this.bindingsTracking = new HomePage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 315 && columnNumber == 13)
                {
                    isobj10ItemsSourceDisabled = true;
                }
                else if (lineNumber == 313 && columnNumber == 13)
                {
                    this.obj10.ItemClick -= obj10ItemClick;
                }
                else if (lineNumber == 339 && columnNumber == 13)
                {
                    isobj11IsOpenDisabled = true;
                }
                else if (lineNumber == 337 && columnNumber == 13)
                {
                    this.obj11.Closed -= obj11Closed;
                }
                else if (lineNumber == 340 && columnNumber == 13)
                {
                    this.obj11.LayoutUpdated -= obj11LayoutUpdated;
                }
                else if (lineNumber == 342 && columnNumber == 13)
                {
                    this.obj11.Opened -= obj11Opened;
                }
                else if (lineNumber == 346 && columnNumber == 21)
                {
                    isobj12WidthDisabled = true;
                }
                else if (lineNumber == 347 && columnNumber == 21)
                {
                    isobj12HeightDisabled = true;
                }
                else if (lineNumber == 348 && columnNumber == 21)
                {
                    isobj12IsTapEnabledDisabled = true;
                }
                else if (lineNumber == 349 && columnNumber == 21)
                {
                    this.obj12.Tapped -= obj12Tapped;
                }
                else if (lineNumber == 222 && columnNumber == 17)
                {
                    isobj17TextDisabled = true;
                }
                else if (lineNumber == 232 && columnNumber == 21)
                {
                    isobj18BackgroundDisabled = true;
                }
                else if (lineNumber == 234 && columnNumber == 21)
                {
                    isobj18VisibilityDisabled = true;
                }
                else if (lineNumber == 253 && columnNumber == 25)
                {
                    isobj19TextDisabled = true;
                }
                else if (lineNumber == 256 && columnNumber == 25)
                {
                    isobj19VisibilityDisabled = true;
                }
                else if (lineNumber == 254 && columnNumber == 25)
                {
                    this.obj19.TextChanged -= obj19TextChanged;
                }
                else if (lineNumber == 263 && columnNumber == 25)
                {
                    this.obj20.GotFocus -= obj20GotFocus;
                }
                else if (lineNumber == 266 && columnNumber == 25)
                {
                    this.obj20.TextChanged -= obj20TextChanged;
                }
                else if (lineNumber == 275 && columnNumber == 25)
                {
                    isobj21VisibilityDisabled = true;
                }
                else if (lineNumber == 285 && columnNumber == 29)
                {
                    this.obj22.EditOptions -= obj22EditOptions;
                }
                else if (lineNumber == 295 && columnNumber == 29)
                {
                    isobj23ContentDisabled = true;
                }
                else if (lineNumber == 294 && columnNumber == 29)
                {
                    this.obj23.Click -= obj23Click;
                }
                else if (lineNumber == 96 && columnNumber == 17)
                {
                    isobj24SelectedIndexDisabled = true;
                }
                else if (lineNumber == 97 && columnNumber == 17)
                {
                    this.obj24.SelectionChanged -= obj24SelectionChanged;
                }
                else if (lineNumber == 123 && columnNumber == 17)
                {
                    this.obj25.LostFocus -= obj25LostFocus;
                }
                else if (lineNumber == 197 && columnNumber == 17)
                {
                    this.obj26.Click -= obj26Click;
                }
                else if (lineNumber == 134 && columnNumber == 21)
                {
                    isobj27TextDisabled = true;
                }
                else if (lineNumber == 135 && columnNumber == 21)
                {
                    this.obj27.TextChanged -= obj27TextChanged;
                }
                else if (lineNumber == 142 && columnNumber == 21)
                {
                    isobj28IsOpenDisabled = true;
                }
                else if (lineNumber == 172 && columnNumber == 33)
                {
                    isobj30ItemsSourceDisabled = true;
                }
                else if (lineNumber == 173 && columnNumber == 33)
                {
                    isobj30VisibilityDisabled = true;
                }
                else if (lineNumber == 170 && columnNumber == 33)
                {
                    this.obj30.ItemClick -= obj30ItemClick;
                }
                else if (lineNumber == 103 && columnNumber == 21)
                {
                    isobj31IsSelectedDisabled = true;
                }
                else if (lineNumber == 108 && columnNumber == 21)
                {
                    isobj32IsSelectedDisabled = true;
                }
                else if (lineNumber == 113 && columnNumber == 21)
                {
                    isobj33IsSelectedDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 10: // View\HomePage.xaml line 308
                        this.obj10 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj10ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.NotesDataItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).ItemClick += obj10ItemClick;
                        break;
                    case 11: // View\HomePage.xaml line 335
                        this.obj11 = (global::Windows.UI.Xaml.Controls.Primitives.Popup)target;
                        this.obj11Closed = (global::System.Object p0, global::System.Object p1) =>
                        {
                            this.dataRoot.NoteDisplayPopUpClosed(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Primitives.Popup)target).Closed += obj11Closed;
                        this.obj11LayoutUpdated = (global::System.Object p0, global::System.Object p1) =>
                        {
                            this.dataRoot.NoteDisplayPopUpLayoutUpdated(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Primitives.Popup)target).LayoutUpdated += obj11LayoutUpdated;
                        this.obj11Opened = (global::System.Object p0, global::System.Object p1) =>
                        {
                            this.dataRoot.NoteDisplayPopUpOpened();
                        };
                        ((global::Windows.UI.Xaml.Controls.Primitives.Popup)target).Opened += obj11Opened;
                        break;
                    case 12: // View\HomePage.xaml line 344
                        this.obj12 = (global::UWPYourNote.View.usercontrol.NoteContent)target;
                        this.obj12Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.NoteContentPopUpTapped();
                        };
                        ((global::UWPYourNote.View.usercontrol.NoteContent)target).Tapped += obj12Tapped;
                        break;
                    case 17: // View\HomePage.xaml line 214
                        this.obj17 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 18: // View\HomePage.xaml line 230
                        this.obj18 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 19: // View\HomePage.xaml line 242
                        this.obj19 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.obj19TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.TextChangedEventArgs p1) =>
                        {
                            this.dataRoot.TitleOfNewNoteTextChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBox)target).TextChanged += obj19TextChanged;
                        break;
                    case 20: // View\HomePage.xaml line 259
                        this.obj20 = (global::Windows.UI.Xaml.Controls.RichEditBox)target;
                        this.obj20GotFocus = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ContentOfNewNoteGotFocus();
                        };
                        ((global::Windows.UI.Xaml.Controls.RichEditBox)target).GotFocus += obj20GotFocus;
                        this.obj20TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ContentOfNewNoteTextChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.RichEditBox)target).TextChanged += obj20TextChanged;
                        break;
                    case 21: // View\HomePage.xaml line 271
                        this.obj21 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 22: // View\HomePage.xaml line 282
                        this.obj22 = (global::UWPYourNote.View.usercontrol.NoteEditOptionsControl)target;
                        this.obj22EditOptions = (global::System.String p0) =>
                        {
                            this.dataRoot.NoteEditOptionsEditOptions(p0);
                        };
                        ((global::UWPYourNote.View.usercontrol.NoteEditOptionsControl)target).EditOptions += obj22EditOptions;
                        break;
                    case 23: // View\HomePage.xaml line 289
                        this.obj23 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj23Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.CreationButtonClick();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj23Click;
                        break;
                    case 24: // View\HomePage.xaml line 90
                        this.obj24 = (global::Windows.UI.Xaml.Controls.ListBox)target;
                        this.obj24SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.MainMenuOptionsSelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ListBox)target).SelectionChanged += obj24SelectionChanged;
                        break;
                    case 25: // View\HomePage.xaml line 119
                        this.obj25 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        this.obj25LostFocus = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.SearchBoxContainerLostFocus();
                        };
                        ((global::Windows.UI.Xaml.Controls.StackPanel)target).LostFocus += obj25LostFocus;
                        break;
                    case 26: // View\HomePage.xaml line 191
                        this.obj26 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj26Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.LogoutContentTapped();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj26Click;
                        break;
                    case 27: // View\HomePage.xaml line 127
                        this.obj27 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.obj27TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.TextChangedEventArgs p1) =>
                        {
                            this.dataRoot.SearchTextBoxTextChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBox)target).TextChanged += obj27TextChanged;
                        break;
                    case 28: // View\HomePage.xaml line 137
                        this.obj28 = (global::Windows.UI.Xaml.Controls.Primitives.Popup)target;
                        break;
                    case 30: // View\HomePage.xaml line 165
                        this.obj30 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        this.obj30ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.SuggestionContainerItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ListView)target).ItemClick += obj30ItemClick;
                        break;
                    case 31: // View\HomePage.xaml line 100
                        this.obj31 = (global::Windows.UI.Xaml.Controls.ListBoxItem)target;
                        this.bindingsTracking.RegisterTwoWayListener_31(this.obj31);
                        break;
                    case 32: // View\HomePage.xaml line 105
                        this.obj32 = (global::Windows.UI.Xaml.Controls.ListBoxItem)target;
                        this.bindingsTracking.RegisterTwoWayListener_32(this.obj32);
                        break;
                    case 33: // View\HomePage.xaml line 110
                        this.obj33 = (global::Windows.UI.Xaml.Controls.ListBoxItem)target;
                        this.bindingsTracking.RegisterTwoWayListener_33(this.obj33);
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IHomePage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::UWPYourNote.View.HomePage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::UWPYourNote.View.HomePage obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_homePageVM(obj.homePageVM, phase);
                        this.Update_NoteDisplayPopUpIsOpen(obj.NoteDisplayPopUpIsOpen, phase);
                        this.Update_NoteContentPopUpWidth(obj.NoteContentPopUpWidth, phase);
                        this.Update_NoteContentPopUpHeight(obj.NoteContentPopUpHeight, phase);
                        this.Update_NoteContentPopUpIsTapped(obj.NoteContentPopUpIsTapped, phase);
                        this.Update_TitleText(obj.TitleText, phase);
                        this.Update_NewNoteBackground(obj.NewNoteBackground, phase);
                        this.Update_NewNoteVisibility(obj.NewNoteVisibility, phase);
                        this.Update_TitleOfNewNoteText(obj.TitleOfNewNoteText, phase);
                        this.Update_TitleOfNewNoteVisibility(obj.TitleOfNewNoteVisibility, phase);
                        this.Update_NoteStyleOptionsVisibility(obj.NoteStyleOptionsVisibility, phase);
                        this.Update_CreationButtonContent(obj.CreationButtonContent, phase);
                        this.Update_MainMenuOptionsSelectedIndex(obj.MainMenuOptionsSelectedIndex, phase);
                        this.Update_SearchTextBoxText(obj.SearchTextBoxText, phase);
                        this.Update_SearchPopupIsOpen(obj.SearchPopupIsOpen, phase);
                        this.Update_SuggestionContentVisibility(obj.SuggestionContentVisibility, phase);
                        this.Update_PersonalNotesIsSelected(obj.PersonalNotesIsSelected, phase);
                        this.Update_SharedNotesIsSelected(obj.SharedNotesIsSelected, phase);
                        this.Update_AllNotesIsSelected(obj.AllNotesIsSelected, phase);
                    }
                }
            }
            private void Update_homePageVM(global::UWPYourNote.ViewModels.HomePageVM obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_homePageVM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_homePageVM_NotesDataItemSource(obj.NotesDataItemSource, phase);
                        this.Update_homePageVM_SuggestionContentItemSource(obj.SuggestionContentItemSource, phase);
                    }
                }
            }
            private void Update_homePageVM_NotesDataItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_homePageVM_NotesDataItemSource(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 308
                    if (!isobj10ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj10, obj, null);
                    }
                }
            }
            private void Update_NoteDisplayPopUpIsOpen(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 335
                    if (!isobj11IsOpenDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Popup_IsOpen(this.obj11, obj);
                    }
                }
            }
            private void Update_NoteContentPopUpWidth(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 344
                    if (!isobj12WidthDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Width(this.obj12, obj);
                    }
                }
            }
            private void Update_NoteContentPopUpHeight(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 344
                    if (!isobj12HeightDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Height(this.obj12, obj);
                    }
                }
            }
            private void Update_NoteContentPopUpIsTapped(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 344
                    if (!isobj12IsTapEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_IsTapEnabled(this.obj12, obj);
                    }
                }
            }
            private void Update_TitleText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 214
                    if (!isobj17TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj17, obj, null);
                    }
                }
            }
            private void Update_NewNoteBackground(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 230
                    if (!isobj18BackgroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Panel_Background(this.obj18, obj, null);
                    }
                }
            }
            private void Update_NewNoteVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 230
                    if (!isobj18VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj18, obj);
                    }
                }
            }
            private void Update_TitleOfNewNoteText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 242
                    if (!isobj19TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj19, obj, null);
                    }
                }
            }
            private void Update_TitleOfNewNoteVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 242
                    if (!isobj19VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj19, obj);
                    }
                }
            }
            private void Update_NoteStyleOptionsVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 271
                    if (!isobj21VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj21, obj);
                    }
                }
            }
            private void Update_CreationButtonContent(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 289
                    if (!isobj23ContentDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ContentControl_Content(this.obj23, obj, null);
                    }
                }
            }
            private void Update_MainMenuOptionsSelectedIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 90
                    if (!isobj24SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj24, obj);
                    }
                }
            }
            private void Update_SearchTextBoxText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 127
                    if (!isobj27TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj27, obj, null);
                    }
                }
            }
            private void Update_SearchPopupIsOpen(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 137
                    if (!isobj28IsOpenDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Popup_IsOpen(this.obj28, obj);
                    }
                }
            }
            private void Update_homePageVM_SuggestionContentItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_homePageVM_SuggestionContentItemSource(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 165
                    if (!isobj30ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj30, obj, null);
                    }
                }
            }
            private void Update_SuggestionContentVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 165
                    if (!isobj30VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj30, obj);
                    }
                }
            }
            private void Update_PersonalNotesIsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 100
                    if (!isobj31IsSelectedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(this.obj31, obj);
                    }
                }
            }
            private void Update_SharedNotesIsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 105
                    if (!isobj32IsSelectedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(this.obj32, obj);
                    }
                }
            }
            private void Update_AllNotesIsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 110
                    if (!isobj33IsSelectedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(this.obj33, obj);
                    }
                }
            }
            private void UpdateTwoWay_31_IsSelected()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.PersonalNotesIsSelected = this.obj31.IsSelected;
                    }
                }
            }
            private void UpdateTwoWay_32_IsSelected()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.SharedNotesIsSelected = this.obj32.IsSelected;
                    }
                }
            }
            private void UpdateTwoWay_33_IsSelected()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.AllNotesIsSelected = this.obj33.IsSelected;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class HomePage_obj1_BindingsTracking
            {
                private global::System.WeakReference<HomePage_obj1_Bindings> weakRefToBindingObj; 

                public HomePage_obj1_BindingsTracking(HomePage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<HomePage_obj1_Bindings>(obj);
                }

                public HomePage_obj1_Bindings TryGetBindingObject()
                {
                    HomePage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_homePageVM(null);
                    UpdateChildListeners_homePageVM_NotesDataItemSource(null);
                    UpdateChildListeners_homePageVM_SuggestionContentItemSource(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    HomePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::UWPYourNote.View.HomePage obj = sender as global::UWPYourNote.View.HomePage;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_homePageVM(obj.homePageVM, DATA_CHANGED);
                                bindings.Update_NoteDisplayPopUpIsOpen(obj.NoteDisplayPopUpIsOpen, DATA_CHANGED);
                                bindings.Update_NoteContentPopUpWidth(obj.NoteContentPopUpWidth, DATA_CHANGED);
                                bindings.Update_NoteContentPopUpHeight(obj.NoteContentPopUpHeight, DATA_CHANGED);
                                bindings.Update_NoteContentPopUpIsTapped(obj.NoteContentPopUpIsTapped, DATA_CHANGED);
                                bindings.Update_TitleText(obj.TitleText, DATA_CHANGED);
                                bindings.Update_NewNoteBackground(obj.NewNoteBackground, DATA_CHANGED);
                                bindings.Update_NewNoteVisibility(obj.NewNoteVisibility, DATA_CHANGED);
                                bindings.Update_TitleOfNewNoteText(obj.TitleOfNewNoteText, DATA_CHANGED);
                                bindings.Update_TitleOfNewNoteVisibility(obj.TitleOfNewNoteVisibility, DATA_CHANGED);
                                bindings.Update_NoteStyleOptionsVisibility(obj.NoteStyleOptionsVisibility, DATA_CHANGED);
                                bindings.Update_CreationButtonContent(obj.CreationButtonContent, DATA_CHANGED);
                                bindings.Update_MainMenuOptionsSelectedIndex(obj.MainMenuOptionsSelectedIndex, DATA_CHANGED);
                                bindings.Update_SearchTextBoxText(obj.SearchTextBoxText, DATA_CHANGED);
                                bindings.Update_SearchPopupIsOpen(obj.SearchPopupIsOpen, DATA_CHANGED);
                                bindings.Update_SuggestionContentVisibility(obj.SuggestionContentVisibility, DATA_CHANGED);
                                bindings.Update_PersonalNotesIsSelected(obj.PersonalNotesIsSelected, DATA_CHANGED);
                                bindings.Update_SharedNotesIsSelected(obj.SharedNotesIsSelected, DATA_CHANGED);
                                bindings.Update_AllNotesIsSelected(obj.AllNotesIsSelected, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "homePageVM":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_homePageVM(obj.homePageVM, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteDisplayPopUpIsOpen":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteDisplayPopUpIsOpen(obj.NoteDisplayPopUpIsOpen, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteContentPopUpWidth":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteContentPopUpWidth(obj.NoteContentPopUpWidth, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteContentPopUpHeight":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteContentPopUpHeight(obj.NoteContentPopUpHeight, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteContentPopUpIsTapped":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteContentPopUpIsTapped(obj.NoteContentPopUpIsTapped, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TitleText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TitleText(obj.TitleText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NewNoteBackground":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NewNoteBackground(obj.NewNoteBackground, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NewNoteVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NewNoteVisibility(obj.NewNoteVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TitleOfNewNoteText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TitleOfNewNoteText(obj.TitleOfNewNoteText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TitleOfNewNoteVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TitleOfNewNoteVisibility(obj.TitleOfNewNoteVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteStyleOptionsVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteStyleOptionsVisibility(obj.NoteStyleOptionsVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CreationButtonContent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_CreationButtonContent(obj.CreationButtonContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MainMenuOptionsSelectedIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_MainMenuOptionsSelectedIndex(obj.MainMenuOptionsSelectedIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SearchTextBoxText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SearchTextBoxText(obj.SearchTextBoxText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SearchPopupIsOpen":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SearchPopupIsOpen(obj.SearchPopupIsOpen, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SuggestionContentVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SuggestionContentVisibility(obj.SuggestionContentVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PersonalNotesIsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PersonalNotesIsSelected(obj.PersonalNotesIsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SharedNotesIsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SharedNotesIsSelected(obj.SharedNotesIsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AllNotesIsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_AllNotesIsSelected(obj.AllNotesIsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::UWPYourNote.View.HomePage obj)
                {
                    HomePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_homePageVM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    HomePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::UWPYourNote.ViewModels.HomePageVM obj = sender as global::UWPYourNote.ViewModels.HomePageVM;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_homePageVM_NotesDataItemSource(obj.NotesDataItemSource, DATA_CHANGED);
                                bindings.Update_homePageVM_SuggestionContentItemSource(obj.SuggestionContentItemSource, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "NotesDataItemSource":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_homePageVM_NotesDataItemSource(obj.NotesDataItemSource, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SuggestionContentItemSource":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_homePageVM_SuggestionContentItemSource(obj.SuggestionContentItemSource, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::UWPYourNote.ViewModels.HomePageVM cache_homePageVM = null;
                public void UpdateChildListeners_homePageVM(global::UWPYourNote.ViewModels.HomePageVM obj)
                {
                    if (obj != cache_homePageVM)
                    {
                        if (cache_homePageVM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_homePageVM).PropertyChanged -= PropertyChanged_homePageVM;
                            cache_homePageVM = null;
                        }
                        if (obj != null)
                        {
                            cache_homePageVM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_homePageVM;
                        }
                    }
                }
                public void PropertyChanged_homePageVM_NotesDataItemSource(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    HomePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_homePageVM_NotesDataItemSource(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    HomePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note> cache_homePageVM_NotesDataItemSource = null;
                public void UpdateChildListeners_homePageVM_NotesDataItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note> obj)
                {
                    if (obj != cache_homePageVM_NotesDataItemSource)
                    {
                        if (cache_homePageVM_NotesDataItemSource != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_homePageVM_NotesDataItemSource).PropertyChanged -= PropertyChanged_homePageVM_NotesDataItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_homePageVM_NotesDataItemSource).CollectionChanged -= CollectionChanged_homePageVM_NotesDataItemSource;
                            cache_homePageVM_NotesDataItemSource = null;
                        }
                        if (obj != null)
                        {
                            cache_homePageVM_NotesDataItemSource = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_homePageVM_NotesDataItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_homePageVM_NotesDataItemSource;
                        }
                    }
                }
                public void PropertyChanged_homePageVM_SuggestionContentItemSource(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    HomePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_homePageVM_SuggestionContentItemSource(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    HomePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note> cache_homePageVM_SuggestionContentItemSource = null;
                public void UpdateChildListeners_homePageVM_SuggestionContentItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note> obj)
                {
                    if (obj != cache_homePageVM_SuggestionContentItemSource)
                    {
                        if (cache_homePageVM_SuggestionContentItemSource != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_homePageVM_SuggestionContentItemSource).PropertyChanged -= PropertyChanged_homePageVM_SuggestionContentItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_homePageVM_SuggestionContentItemSource).CollectionChanged -= CollectionChanged_homePageVM_SuggestionContentItemSource;
                            cache_homePageVM_SuggestionContentItemSource = null;
                        }
                        if (obj != null)
                        {
                            cache_homePageVM_SuggestionContentItemSource = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_homePageVM_SuggestionContentItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_homePageVM_SuggestionContentItemSource;
                        }
                    }
                }
                public void RegisterTwoWayListener_31(global::Windows.UI.Xaml.Controls.ListBoxItem sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem.IsSelectedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_31_IsSelected();
                        }
                    });
                }
                public void RegisterTwoWayListener_32(global::Windows.UI.Xaml.Controls.ListBoxItem sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem.IsSelectedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_32_IsSelected();
                        }
                    });
                }
                public void RegisterTwoWayListener_33(global::Windows.UI.Xaml.Controls.ListBoxItem sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem.IsSelectedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_33_IsSelected();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 10: // View\HomePage.xaml line 308
                {
                    this.NotesData = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 11: // View\HomePage.xaml line 335
                {
                    this.NoteDisplayPopUp = (global::Windows.UI.Xaml.Controls.Primitives.Popup)(target);
                }
                break;
            case 12: // View\HomePage.xaml line 344
                {
                    this.NoteContentPopUp = (global::UWPYourNote.View.usercontrol.NoteContent)(target);
                }
                break;
            case 13: // View\HomePage.xaml line 352
                {
                    this.PopIn = (global::Windows.UI.Xaml.Media.Animation.Storyboard)(target);
                }
                break;
            case 14: // View\HomePage.xaml line 355
                {
                    this.PopOut = (global::Windows.UI.Xaml.Media.Animation.Storyboard)(target);
                }
                break;
            case 17: // View\HomePage.xaml line 214
                {
                    this.Title = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 18: // View\HomePage.xaml line 230
                {
                    this.NewNote = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 19: // View\HomePage.xaml line 242
                {
                    this.TitleOfNewNote = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 20: // View\HomePage.xaml line 259
                {
                    this.ContentOfNewNote = (global::Windows.UI.Xaml.Controls.RichEditBox)(target);
                }
                break;
            case 21: // View\HomePage.xaml line 271
                {
                    this.NoteStyleOptions = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 22: // View\HomePage.xaml line 282
                {
                    this.NoteEditOptions = (global::UWPYourNote.View.usercontrol.NoteEditOptionsControl)(target);
                }
                break;
            case 23: // View\HomePage.xaml line 289
                {
                    this.CreationButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 24: // View\HomePage.xaml line 90
                {
                    this.MainMenuOptions = (global::Windows.UI.Xaml.Controls.ListBox)(target);
                }
                break;
            case 25: // View\HomePage.xaml line 119
                {
                    this.SearchBoxContainer = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 26: // View\HomePage.xaml line 191
                {
                    this.Logout = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 27: // View\HomePage.xaml line 127
                {
                    this.SearchTextBox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 28: // View\HomePage.xaml line 137
                {
                    this.SearchPopup = (global::Windows.UI.Xaml.Controls.Primitives.Popup)(target);
                }
                break;
            case 29: // View\HomePage.xaml line 147
                {
                    this.PopUpContainer = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 30: // View\HomePage.xaml line 165
                {
                    this.Suggestion = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 31: // View\HomePage.xaml line 100
                {
                    this.PersonalNotes = (global::Windows.UI.Xaml.Controls.ListBoxItem)(target);
                }
                break;
            case 32: // View\HomePage.xaml line 105
                {
                    this.SharedNotes = (global::Windows.UI.Xaml.Controls.ListBoxItem)(target);
                }
                break;
            case 33: // View\HomePage.xaml line 110
                {
                    this.AllNotes = (global::Windows.UI.Xaml.Controls.ListBoxItem)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // View\HomePage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    HomePage_obj1_Bindings bindings = new HomePage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 3: // View\HomePage.xaml line 37
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element3 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    HomePage_obj3_Bindings bindings = new HomePage_obj3_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element3.DataContext);
                    element3.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element3, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element3, bindings);
                }
                break;
            case 7: // View\HomePage.xaml line 16
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element7 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    HomePage_obj7_Bindings bindings = new HomePage_obj7_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element7.DataContext);
                    element7.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element7, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element7, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

