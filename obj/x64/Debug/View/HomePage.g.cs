#pragma checksum "D:\YourNote\UWPYourNote\View\HomePage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "466BCF044F5B22870871D6D8F92080807C0748CBC06C251CBE89490E0485FBA8"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UWPYourNote.View
{
    partial class HomePage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Popup_IsOpen(global::Windows.UI.Xaml.Controls.Primitives.Popup obj, global::System.Boolean value)
            {
                obj.IsOpen = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Width(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Width = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Height(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Height = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Panel_Background(global::Windows.UI.Xaml.Controls.Panel obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ContentControl_Content(global::Windows.UI.Xaml.Controls.ContentControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Int32 value)
            {
                obj.SelectedIndex = value;
            }
            public static void Set_UWPYourNote_View_usercontrol_NoteTitleSearchBox_LoggedUser(global::UWPYourNote.View.usercontrol.NoteTitleSearchBox obj, global::UWPYourNoteLibrary.Models.User value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::UWPYourNoteLibrary.Models.User) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::UWPYourNoteLibrary.Models.User), targetNullValue);
                }
                obj.LoggedUser = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem obj, global::System.Boolean value)
            {
                obj.IsSelected = value;
            }
            public static void Set_Windows_UI_Xaml_Shapes_Shape_Fill(global::Windows.UI.Xaml.Shapes.Shape obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Fill = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class HomePage_obj3_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IHomePage_Bindings
        {
            private global::UWPYourNoteLibrary.Models.Note dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj3;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4FillDisabled = false;
            private static bool isobj5TextDisabled = false;

            private HomePage_obj3_BindingsTracking bindingsTracking;

            public HomePage_obj3_Bindings()
            {
                this.bindingsTracking = new HomePage_obj3_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 53 && columnNumber == 21)
                {
                    isobj4FillDisabled = true;
                }
                else if (lineNumber == 60 && columnNumber == 21)
                {
                    isobj5TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // View\HomePage.xaml line 49
                        this.obj3 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 4: // View\HomePage.xaml line 50
                        this.obj4 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 5: // View\HomePage.xaml line 55
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj3.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::UWPYourNoteLibrary.Models.Note) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IHomePage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::UWPYourNoteLibrary.Models.Note)newDataRoot;
                    return true;
                }
                return false;
            }

            private bool TryGet_noteColor(out global::System.Int64 val)
            {
                global::UWPYourNoteLibrary.Models.Note obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.noteColor;
                    return true;
                }
                else
                {
                    val = default(global::System.Int64);
                    return false;
                }
            }

            private bool TryGet_(out global::UWPYourNoteLibrary.Models.Note val)
            {
                val = this.dataRoot;
                return true;
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(int phase)
            {
                global::System.Int64 p0;
                if (!TryGet_noteColor(out p0)) { return; }
                global::Windows.UI.Xaml.Media.SolidColorBrush result = global::UWPYourNoteLibrary.Util.NotesUtilities.GetSolidColorBrush(p0);
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\HomePage.xaml line 50
                    if (!isobj4FillDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj4, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::UWPYourNoteLibrary.Models.Note obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_noteColor(obj.noteColor, phase);
                        this.Update_title(obj.title, phase);
                    }
                }
                this.Update_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(phase);
                this.CompleteUpdate(phase);
            }
            private void Update_noteColor(global::System.Int64 obj, int phase)
            {
                this.Update_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(phase);
            }
            private void Update_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    if (!isobj4FillDisabled)
                    {
                        this.PendingFunctionBindings["UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749"] = new InvokeFunctionDelegate(this.Invoke_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749); 
                    }
                }
            }
            private void Update_title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\HomePage.xaml line 55
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class HomePage_obj3_BindingsTracking
            {
                private global::System.WeakReference<HomePage_obj3_Bindings> weakRefToBindingObj; 

                public HomePage_obj3_BindingsTracking(HomePage_obj3_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<HomePage_obj3_Bindings>(obj);
                }

                public HomePage_obj3_Bindings TryGetBindingObject()
                {
                    HomePage_obj3_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                }

            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class HomePage_obj7_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IHomePage_Bindings
        {
            private global::UWPYourNoteLibrary.Models.Note dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj7;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj8;
            private global::Windows.UI.Xaml.Controls.TextBlock obj9;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj8FillDisabled = false;
            private static bool isobj9TextDisabled = false;

            private HomePage_obj7_BindingsTracking bindingsTracking;

            public HomePage_obj7_Bindings()
            {
                this.bindingsTracking = new HomePage_obj7_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 36 && columnNumber == 21)
                {
                    isobj8FillDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 21)
                {
                    isobj9TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7: // View\HomePage.xaml line 28
                        this.obj7 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 8: // View\HomePage.xaml line 33
                        this.obj8 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 9: // View\HomePage.xaml line 37
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj7.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::UWPYourNoteLibrary.Models.Note) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IHomePage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::UWPYourNoteLibrary.Models.Note)newDataRoot;
                    return true;
                }
                return false;
            }

            private bool TryGet_noteColor(out global::System.Int64 val)
            {
                global::UWPYourNoteLibrary.Models.Note obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.noteColor;
                    return true;
                }
                else
                {
                    val = default(global::System.Int64);
                    return false;
                }
            }

            private bool TryGet_(out global::UWPYourNoteLibrary.Models.Note val)
            {
                val = this.dataRoot;
                return true;
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(int phase)
            {
                global::System.Int64 p0;
                if (!TryGet_noteColor(out p0)) { return; }
                global::Windows.UI.Xaml.Media.SolidColorBrush result = global::UWPYourNoteLibrary.Util.NotesUtilities.GetSolidColorBrush(p0);
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\HomePage.xaml line 33
                    if (!isobj8FillDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj8, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::UWPYourNoteLibrary.Models.Note obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_noteColor(obj.noteColor, phase);
                        this.Update_title(obj.title, phase);
                    }
                }
                this.Update_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(phase);
                this.CompleteUpdate(phase);
            }
            private void Update_noteColor(global::System.Int64 obj, int phase)
            {
                this.Update_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(phase);
            }
            private void Update_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    if (!isobj8FillDisabled)
                    {
                        this.PendingFunctionBindings["UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749"] = new InvokeFunctionDelegate(this.Invoke_UWPYourNoteLibrary_Util_NotesUtilities_M_GetSolidColorBrush_3154740749); 
                    }
                }
            }
            private void Update_title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\HomePage.xaml line 37
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj9, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class HomePage_obj7_BindingsTracking
            {
                private global::System.WeakReference<HomePage_obj7_Bindings> weakRefToBindingObj; 

                public HomePage_obj7_BindingsTracking(HomePage_obj7_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<HomePage_obj7_Bindings>(obj);
                }

                public HomePage_obj7_Bindings TryGetBindingObject()
                {
                    HomePage_obj7_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                }

            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class HomePage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IHomePage_Bindings
        {
            private global::UWPYourNote.View.HomePage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.GridView obj12;
            private global::Windows.UI.Xaml.Controls.Primitives.Popup obj13;
            private global::UWPYourNote.View.usercontrol.NoteContent obj14;
            private global::Windows.UI.Xaml.Controls.TextBlock obj20;
            private global::Windows.UI.Xaml.Controls.Grid obj22;
            private global::Windows.UI.Xaml.Controls.TextBox obj23;
            private global::Windows.UI.Xaml.Controls.RichEditBox obj24;
            private global::Windows.UI.Xaml.Controls.Grid obj25;
            private global::UWPYourNote.View.usercontrol.NoteEditOptionsControl obj26;
            private global::Windows.UI.Xaml.Controls.Button obj27;
            private global::Windows.UI.Xaml.Controls.ListBox obj28;
            private global::Windows.UI.Xaml.Controls.TextBlock obj33;
            private global::Windows.UI.Xaml.Controls.Button obj34;
            private global::Windows.UI.Xaml.Controls.Button obj35;
            private global::UWPYourNote.View.usercontrol.ThemeToggle obj36;
            private global::UWPYourNote.View.usercontrol.NoteTitleSearchBox obj37;
            private global::Windows.UI.Xaml.Controls.ListBoxItem obj38;
            private global::Windows.UI.Xaml.Controls.ListBoxItem obj39;
            private global::Windows.UI.Xaml.Controls.ListBoxItem obj40;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj12ItemClick;
            private global::System.EventHandler<global::System.Object> obj13Closed;
            private global::System.EventHandler<global::System.Object> obj13LayoutUpdated;
            private global::System.EventHandler<global::System.Object> obj13Opened;
            private global::System.Action<global::UWPYourNoteLibrary.Models.Note> obj14PopOutWindow;
            private global::Windows.UI.Xaml.Controls.TextChangedEventHandler obj23TextChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj24GotFocus;
            private global::Windows.UI.Xaml.RoutedEventHandler obj24TextChanged;
            private global::System.Action<global::System.String> obj26EditOptions;
            private global::Windows.UI.Xaml.RoutedEventHandler obj27Click;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj28SelectionChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj34Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj35Click;
            private global::System.Action obj36ToggleThemeClick;
            private global::System.Action<global::UWPYourNoteLibrary.Models.Note> obj37DisplaySelectedNote;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj12ItemsSourceDisabled = false;
            private static bool isobj13IsOpenDisabled = false;
            private static bool isobj14WidthDisabled = false;
            private static bool isobj14HeightDisabled = false;
            private static bool isobj20TextDisabled = false;
            private static bool isobj22BackgroundDisabled = false;
            private static bool isobj22VisibilityDisabled = false;
            private static bool isobj23TextDisabled = false;
            private static bool isobj23VisibilityDisabled = false;
            private static bool isobj25VisibilityDisabled = false;
            private static bool isobj27ContentDisabled = false;
            private static bool isobj28SelectedIndexDisabled = false;
            private static bool isobj33TextDisabled = false;
            private static bool isobj37LoggedUserDisabled = false;
            private static bool isobj38IsSelectedDisabled = false;
            private static bool isobj39IsSelectedDisabled = false;
            private static bool isobj40IsSelectedDisabled = false;

            private HomePage_obj1_BindingsTracking bindingsTracking;

            public HomePage_obj1_Bindings()
            {
                this.bindingsTracking = new HomePage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 362 && columnNumber == 17)
                {
                    isobj12ItemsSourceDisabled = true;
                }
                else if (lineNumber == 360 && columnNumber == 17)
                {
                    this.obj12.ItemClick -= obj12ItemClick;
                }
                else if (lineNumber == 400 && columnNumber == 17)
                {
                    isobj13IsOpenDisabled = true;
                }
                else if (lineNumber == 398 && columnNumber == 17)
                {
                    this.obj13.Closed -= obj13Closed;
                }
                else if (lineNumber == 401 && columnNumber == 17)
                {
                    this.obj13.LayoutUpdated -= obj13LayoutUpdated;
                }
                else if (lineNumber == 403 && columnNumber == 17)
                {
                    this.obj13.Opened -= obj13Opened;
                }
                else if (lineNumber == 407 && columnNumber == 25)
                {
                    isobj14WidthDisabled = true;
                }
                else if (lineNumber == 408 && columnNumber == 25)
                {
                    isobj14HeightDisabled = true;
                }
                else if (lineNumber == 409 && columnNumber == 25)
                {
                    this.obj14.PopOutWindow -= obj14PopOutWindow;
                }
                else if (lineNumber == 263 && columnNumber == 17)
                {
                    isobj20TextDisabled = true;
                }
                else if (lineNumber == 275 && columnNumber == 21)
                {
                    isobj22BackgroundDisabled = true;
                }
                else if (lineNumber == 277 && columnNumber == 21)
                {
                    isobj22VisibilityDisabled = true;
                }
                else if (lineNumber == 298 && columnNumber == 25)
                {
                    isobj23TextDisabled = true;
                }
                else if (lineNumber == 301 && columnNumber == 25)
                {
                    isobj23VisibilityDisabled = true;
                }
                else if (lineNumber == 299 && columnNumber == 25)
                {
                    this.obj23.TextChanged -= obj23TextChanged;
                }
                else if (lineNumber == 308 && columnNumber == 25)
                {
                    this.obj24.GotFocus -= obj24GotFocus;
                }
                else if (lineNumber == 311 && columnNumber == 25)
                {
                    this.obj24.TextChanged -= obj24TextChanged;
                }
                else if (lineNumber == 320 && columnNumber == 25)
                {
                    isobj25VisibilityDisabled = true;
                }
                else if (lineNumber == 330 && columnNumber == 29)
                {
                    this.obj26.EditOptions -= obj26EditOptions;
                }
                else if (lineNumber == 340 && columnNumber == 29)
                {
                    isobj27ContentDisabled = true;
                }
                else if (lineNumber == 339 && columnNumber == 29)
                {
                    this.obj27.Click -= obj27Click;
                }
                else if (lineNumber == 111 && columnNumber == 17)
                {
                    isobj28SelectedIndexDisabled = true;
                }
                else if (lineNumber == 112 && columnNumber == 17)
                {
                    this.obj28.SelectionChanged -= obj28SelectionChanged;
                }
                else if (lineNumber == 216 && columnNumber == 33)
                {
                    isobj33TextDisabled = true;
                }
                else if (lineNumber == 222 && columnNumber == 33)
                {
                    this.obj34.Click -= obj34Click;
                }
                else if (lineNumber == 229 && columnNumber == 33)
                {
                    this.obj35.Click -= obj35Click;
                }
                else if (lineNumber == 201 && columnNumber == 37)
                {
                    this.obj36.ToggleThemeClick -= obj36ToggleThemeClick;
                }
                else if (lineNumber == 145 && columnNumber == 21)
                {
                    isobj37LoggedUserDisabled = true;
                }
                else if (lineNumber == 144 && columnNumber == 21)
                {
                    this.obj37.DisplaySelectedNote -= obj37DisplaySelectedNote;
                }
                else if (lineNumber == 118 && columnNumber == 21)
                {
                    isobj38IsSelectedDisabled = true;
                }
                else if (lineNumber == 123 && columnNumber == 21)
                {
                    isobj39IsSelectedDisabled = true;
                }
                else if (lineNumber == 128 && columnNumber == 21)
                {
                    isobj40IsSelectedDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 12: // View\HomePage.xaml line 354
                        this.obj12 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj12ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.NotesDataItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).ItemClick += obj12ItemClick;
                        break;
                    case 13: // View\HomePage.xaml line 396
                        this.obj13 = (global::Windows.UI.Xaml.Controls.Primitives.Popup)target;
                        this.obj13Closed = (global::System.Object p0, global::System.Object p1) =>
                        {
                            this.dataRoot.NoteDisplayPopUpClosed(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Primitives.Popup)target).Closed += obj13Closed;
                        this.obj13LayoutUpdated = (global::System.Object p0, global::System.Object p1) =>
                        {
                            this.dataRoot.NoteDisplayPopUpLayoutUpdated(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Primitives.Popup)target).LayoutUpdated += obj13LayoutUpdated;
                        this.obj13Opened = (global::System.Object p0, global::System.Object p1) =>
                        {
                            this.dataRoot.NoteDisplayPopUpOpened();
                        };
                        ((global::Windows.UI.Xaml.Controls.Primitives.Popup)target).Opened += obj13Opened;
                        break;
                    case 14: // View\HomePage.xaml line 405
                        this.obj14 = (global::UWPYourNote.View.usercontrol.NoteContent)target;
                        this.obj14PopOutWindow = (global::UWPYourNoteLibrary.Models.Note p0) =>
                        {
                            this.dataRoot.NotesInPopOutWindow(p0);
                        };
                        ((global::UWPYourNote.View.usercontrol.NoteContent)target).PopOutWindow += obj14PopOutWindow;
                        break;
                    case 20: // View\HomePage.xaml line 255
                        this.obj20 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 22: // View\HomePage.xaml line 272
                        this.obj22 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 23: // View\HomePage.xaml line 285
                        this.obj23 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.obj23TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.TextChangedEventArgs p1) =>
                        {
                            this.dataRoot.TitleOfNewNoteTextChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBox)target).TextChanged += obj23TextChanged;
                        break;
                    case 24: // View\HomePage.xaml line 304
                        this.obj24 = (global::Windows.UI.Xaml.Controls.RichEditBox)target;
                        this.obj24GotFocus = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ContentOfNewNoteGotFocus();
                        };
                        ((global::Windows.UI.Xaml.Controls.RichEditBox)target).GotFocus += obj24GotFocus;
                        this.obj24TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ContentOfNewNoteTextChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.RichEditBox)target).TextChanged += obj24TextChanged;
                        break;
                    case 25: // View\HomePage.xaml line 316
                        this.obj25 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 26: // View\HomePage.xaml line 327
                        this.obj26 = (global::UWPYourNote.View.usercontrol.NoteEditOptionsControl)target;
                        this.obj26EditOptions = (global::System.String p0) =>
                        {
                            this.dataRoot.NoteEditOptionsEditOptions(p0);
                        };
                        ((global::UWPYourNote.View.usercontrol.NoteEditOptionsControl)target).EditOptions += obj26EditOptions;
                        break;
                    case 27: // View\HomePage.xaml line 334
                        this.obj27 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj27Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.CreationButtonClick();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj27Click;
                        break;
                    case 28: // View\HomePage.xaml line 104
                        this.obj28 = (global::Windows.UI.Xaml.Controls.ListBox)target;
                        this.obj28SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.MainMenuOptionsSelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ListBox)target).SelectionChanged += obj28SelectionChanged;
                        this.bindingsTracking.RegisterTwoWayListener_28(this.obj28);
                        break;
                    case 33: // View\HomePage.xaml line 209
                        this.obj33 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 34: // View\HomePage.xaml line 217
                        this.obj34 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj34Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.AppearenceClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj34Click;
                        break;
                    case 35: // View\HomePage.xaml line 225
                        this.obj35 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj35Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.LogoutContentTapped();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj35Click;
                        break;
                    case 36: // View\HomePage.xaml line 198
                        this.obj36 = (global::UWPYourNote.View.usercontrol.ThemeToggle)target;
                        this.obj36ToggleThemeClick = () =>
                        {
                            this.dataRoot.ThemeToggleButtonClick();
                        };
                        ((global::UWPYourNote.View.usercontrol.ThemeToggle)target).ToggleThemeClick += obj36ToggleThemeClick;
                        break;
                    case 37: // View\HomePage.xaml line 141
                        this.obj37 = (global::UWPYourNote.View.usercontrol.NoteTitleSearchBox)target;
                        this.obj37DisplaySelectedNote = (global::UWPYourNoteLibrary.Models.Note p0) =>
                        {
                            this.dataRoot.TitleSearchBoxDisplaySelectedNote(p0);
                        };
                        ((global::UWPYourNote.View.usercontrol.NoteTitleSearchBox)target).DisplaySelectedNote += obj37DisplaySelectedNote;
                        break;
                    case 38: // View\HomePage.xaml line 115
                        this.obj38 = (global::Windows.UI.Xaml.Controls.ListBoxItem)target;
                        this.bindingsTracking.RegisterTwoWayListener_38(this.obj38);
                        break;
                    case 39: // View\HomePage.xaml line 120
                        this.obj39 = (global::Windows.UI.Xaml.Controls.ListBoxItem)target;
                        this.bindingsTracking.RegisterTwoWayListener_39(this.obj39);
                        break;
                    case 40: // View\HomePage.xaml line 125
                        this.obj40 = (global::Windows.UI.Xaml.Controls.ListBoxItem)target;
                        this.bindingsTracking.RegisterTwoWayListener_40(this.obj40);
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IHomePage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::UWPYourNote.View.HomePage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::UWPYourNote.View.HomePage obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_homePageVM(obj.homePageVM, phase);
                        this.Update_NoteDisplayPopUpIsOpen(obj.NoteDisplayPopUpIsOpen, phase);
                        this.Update_NoteContentPopUpWidth(obj.NoteContentPopUpWidth, phase);
                        this.Update_NoteContentPopUpHeight(obj.NoteContentPopUpHeight, phase);
                        this.Update_TitleText(obj.TitleText, phase);
                        this.Update_NewNoteBackground(obj.NewNoteBackground, phase);
                        this.Update_NewNoteVisibility(obj.NewNoteVisibility, phase);
                        this.Update_TitleOfNewNoteText(obj.TitleOfNewNoteText, phase);
                        this.Update_TitleOfNewNoteVisibility(obj.TitleOfNewNoteVisibility, phase);
                        this.Update_NoteStyleOptionsVisibility(obj.NoteStyleOptionsVisibility, phase);
                        this.Update_CreationButtonContent(obj.CreationButtonContent, phase);
                        this.Update_MainMenuOptionsSelectedIndex(obj.MainMenuOptionsSelectedIndex, phase);
                        this.Update_WelcomeText(obj.WelcomeText, phase);
                        this.Update_LoggedUser(obj.LoggedUser, phase);
                        this.Update_PersonalNotesIsSelected(obj.PersonalNotesIsSelected, phase);
                        this.Update_SharedNotesIsSelected(obj.SharedNotesIsSelected, phase);
                        this.Update_AllNotesIsSelected(obj.AllNotesIsSelected, phase);
                    }
                }
            }
            private void Update_homePageVM(global::UWPYourNote.ViewModels.HomePageVM obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_homePageVM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_homePageVM_NotesDataItemSource(obj.NotesDataItemSource, phase);
                    }
                }
            }
            private void Update_homePageVM_NotesDataItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_homePageVM_NotesDataItemSource(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 354
                    if (!isobj12ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj12, obj, null);
                    }
                }
            }
            private void Update_NoteDisplayPopUpIsOpen(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 396
                    if (!isobj13IsOpenDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Popup_IsOpen(this.obj13, obj);
                    }
                }
            }
            private void Update_NoteContentPopUpWidth(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 405
                    if (!isobj14WidthDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Width(this.obj14, obj);
                    }
                }
            }
            private void Update_NoteContentPopUpHeight(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 405
                    if (!isobj14HeightDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Height(this.obj14, obj);
                    }
                }
            }
            private void Update_TitleText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 255
                    if (!isobj20TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj20, obj, null);
                    }
                }
            }
            private void Update_NewNoteBackground(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 272
                    if (!isobj22BackgroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Panel_Background(this.obj22, obj, null);
                    }
                }
            }
            private void Update_NewNoteVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 272
                    if (!isobj22VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj22, obj);
                    }
                }
            }
            private void Update_TitleOfNewNoteText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 285
                    if (!isobj23TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj23, obj, null);
                    }
                }
            }
            private void Update_TitleOfNewNoteVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 285
                    if (!isobj23VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj23, obj);
                    }
                }
            }
            private void Update_NoteStyleOptionsVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 316
                    if (!isobj25VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj25, obj);
                    }
                }
            }
            private void Update_CreationButtonContent(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 334
                    if (!isobj27ContentDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ContentControl_Content(this.obj27, obj, null);
                    }
                }
            }
            private void Update_MainMenuOptionsSelectedIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 104
                    if (!isobj28SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj28, obj);
                    }
                }
            }
            private void Update_WelcomeText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 209
                    if (!isobj33TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj33, obj, null);
                    }
                }
            }
            private void Update_LoggedUser(global::UWPYourNoteLibrary.Models.User obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 141
                    if (!isobj37LoggedUserDisabled)
                    {
                        XamlBindingSetters.Set_UWPYourNote_View_usercontrol_NoteTitleSearchBox_LoggedUser(this.obj37, obj, null);
                    }
                }
            }
            private void Update_PersonalNotesIsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 115
                    if (!isobj38IsSelectedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(this.obj38, obj);
                    }
                }
            }
            private void Update_SharedNotesIsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 120
                    if (!isobj39IsSelectedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(this.obj39, obj);
                    }
                }
            }
            private void Update_AllNotesIsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\HomePage.xaml line 125
                    if (!isobj40IsSelectedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(this.obj40, obj);
                    }
                }
            }
            private void UpdateTwoWay_28_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.MainMenuOptionsSelectedIndex = this.obj28.SelectedIndex;
                    }
                }
            }
            private void UpdateTwoWay_38_IsSelected()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.PersonalNotesIsSelected = this.obj38.IsSelected;
                    }
                }
            }
            private void UpdateTwoWay_39_IsSelected()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.SharedNotesIsSelected = this.obj39.IsSelected;
                    }
                }
            }
            private void UpdateTwoWay_40_IsSelected()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.AllNotesIsSelected = this.obj40.IsSelected;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class HomePage_obj1_BindingsTracking
            {
                private global::System.WeakReference<HomePage_obj1_Bindings> weakRefToBindingObj; 

                public HomePage_obj1_BindingsTracking(HomePage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<HomePage_obj1_Bindings>(obj);
                }

                public HomePage_obj1_Bindings TryGetBindingObject()
                {
                    HomePage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_homePageVM(null);
                    UpdateChildListeners_homePageVM_NotesDataItemSource(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    HomePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::UWPYourNote.View.HomePage obj = sender as global::UWPYourNote.View.HomePage;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_homePageVM(obj.homePageVM, DATA_CHANGED);
                                bindings.Update_NoteDisplayPopUpIsOpen(obj.NoteDisplayPopUpIsOpen, DATA_CHANGED);
                                bindings.Update_NoteContentPopUpWidth(obj.NoteContentPopUpWidth, DATA_CHANGED);
                                bindings.Update_NoteContentPopUpHeight(obj.NoteContentPopUpHeight, DATA_CHANGED);
                                bindings.Update_TitleText(obj.TitleText, DATA_CHANGED);
                                bindings.Update_NewNoteBackground(obj.NewNoteBackground, DATA_CHANGED);
                                bindings.Update_NewNoteVisibility(obj.NewNoteVisibility, DATA_CHANGED);
                                bindings.Update_TitleOfNewNoteText(obj.TitleOfNewNoteText, DATA_CHANGED);
                                bindings.Update_TitleOfNewNoteVisibility(obj.TitleOfNewNoteVisibility, DATA_CHANGED);
                                bindings.Update_NoteStyleOptionsVisibility(obj.NoteStyleOptionsVisibility, DATA_CHANGED);
                                bindings.Update_CreationButtonContent(obj.CreationButtonContent, DATA_CHANGED);
                                bindings.Update_MainMenuOptionsSelectedIndex(obj.MainMenuOptionsSelectedIndex, DATA_CHANGED);
                                bindings.Update_WelcomeText(obj.WelcomeText, DATA_CHANGED);
                                bindings.Update_LoggedUser(obj.LoggedUser, DATA_CHANGED);
                                bindings.Update_PersonalNotesIsSelected(obj.PersonalNotesIsSelected, DATA_CHANGED);
                                bindings.Update_SharedNotesIsSelected(obj.SharedNotesIsSelected, DATA_CHANGED);
                                bindings.Update_AllNotesIsSelected(obj.AllNotesIsSelected, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "homePageVM":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_homePageVM(obj.homePageVM, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteDisplayPopUpIsOpen":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteDisplayPopUpIsOpen(obj.NoteDisplayPopUpIsOpen, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteContentPopUpWidth":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteContentPopUpWidth(obj.NoteContentPopUpWidth, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteContentPopUpHeight":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteContentPopUpHeight(obj.NoteContentPopUpHeight, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TitleText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TitleText(obj.TitleText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NewNoteBackground":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NewNoteBackground(obj.NewNoteBackground, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NewNoteVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NewNoteVisibility(obj.NewNoteVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TitleOfNewNoteText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TitleOfNewNoteText(obj.TitleOfNewNoteText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TitleOfNewNoteVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TitleOfNewNoteVisibility(obj.TitleOfNewNoteVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteStyleOptionsVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteStyleOptionsVisibility(obj.NoteStyleOptionsVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CreationButtonContent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_CreationButtonContent(obj.CreationButtonContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MainMenuOptionsSelectedIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_MainMenuOptionsSelectedIndex(obj.MainMenuOptionsSelectedIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "WelcomeText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_WelcomeText(obj.WelcomeText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "LoggedUser":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_LoggedUser(obj.LoggedUser, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PersonalNotesIsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PersonalNotesIsSelected(obj.PersonalNotesIsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SharedNotesIsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SharedNotesIsSelected(obj.SharedNotesIsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AllNotesIsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_AllNotesIsSelected(obj.AllNotesIsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::UWPYourNote.View.HomePage obj)
                {
                    HomePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_homePageVM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    HomePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::UWPYourNote.ViewModels.HomePageVM obj = sender as global::UWPYourNote.ViewModels.HomePageVM;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_homePageVM_NotesDataItemSource(obj.NotesDataItemSource, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "NotesDataItemSource":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_homePageVM_NotesDataItemSource(obj.NotesDataItemSource, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::UWPYourNote.ViewModels.HomePageVM cache_homePageVM = null;
                public void UpdateChildListeners_homePageVM(global::UWPYourNote.ViewModels.HomePageVM obj)
                {
                    if (obj != cache_homePageVM)
                    {
                        if (cache_homePageVM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_homePageVM).PropertyChanged -= PropertyChanged_homePageVM;
                            cache_homePageVM = null;
                        }
                        if (obj != null)
                        {
                            cache_homePageVM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_homePageVM;
                        }
                    }
                }
                public void PropertyChanged_homePageVM_NotesDataItemSource(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    HomePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_homePageVM_NotesDataItemSource(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    HomePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note> cache_homePageVM_NotesDataItemSource = null;
                public void UpdateChildListeners_homePageVM_NotesDataItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::UWPYourNoteLibrary.Models.Note> obj)
                {
                    if (obj != cache_homePageVM_NotesDataItemSource)
                    {
                        if (cache_homePageVM_NotesDataItemSource != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_homePageVM_NotesDataItemSource).PropertyChanged -= PropertyChanged_homePageVM_NotesDataItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_homePageVM_NotesDataItemSource).CollectionChanged -= CollectionChanged_homePageVM_NotesDataItemSource;
                            cache_homePageVM_NotesDataItemSource = null;
                        }
                        if (obj != null)
                        {
                            cache_homePageVM_NotesDataItemSource = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_homePageVM_NotesDataItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_homePageVM_NotesDataItemSource;
                        }
                    }
                }
                public void RegisterTwoWayListener_28(global::Windows.UI.Xaml.Controls.ListBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_28_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_38(global::Windows.UI.Xaml.Controls.ListBoxItem sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem.IsSelectedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_38_IsSelected();
                        }
                    });
                }
                public void RegisterTwoWayListener_39(global::Windows.UI.Xaml.Controls.ListBoxItem sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem.IsSelectedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_39_IsSelected();
                        }
                    });
                }
                public void RegisterTwoWayListener_40(global::Windows.UI.Xaml.Controls.ListBoxItem sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem.IsSelectedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_40_IsSelected();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // View\HomePage.xaml line 1
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)(target);
                    ((global::Windows.UI.Xaml.Controls.Page)element1).Loaded += this.Page_Loaded;
                }
                break;
            case 12: // View\HomePage.xaml line 354
                {
                    this.NotesData = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 13: // View\HomePage.xaml line 396
                {
                    this.NoteDisplayPopUp = (global::Windows.UI.Xaml.Controls.Primitives.Popup)(target);
                }
                break;
            case 14: // View\HomePage.xaml line 405
                {
                    this.NoteContentPopUp = (global::UWPYourNote.View.usercontrol.NoteContent)(target);
                }
                break;
            case 15: // View\HomePage.xaml line 412
                {
                    this.PopIn = (global::Windows.UI.Xaml.Media.Animation.Storyboard)(target);
                }
                break;
            case 16: // View\HomePage.xaml line 415
                {
                    this.PopOut = (global::Windows.UI.Xaml.Media.Animation.Storyboard)(target);
                }
                break;
            case 19: // View\HomePage.xaml line 367
                {
                    global::UWPYourNote.View.usercontrol.NotesDataTemplate element19 = (global::UWPYourNote.View.usercontrol.NotesDataTemplate)(target);
                    ((global::UWPYourNote.View.usercontrol.NotesDataTemplate)element19).NoteDisplayPopOutWindow += this.NotesInPopOutWindow;
                }
                break;
            case 20: // View\HomePage.xaml line 255
                {
                    this.Title = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 21: // View\HomePage.xaml line 266
#pragma warning disable 0618  //   Warning on Deprecated usage
                {
                    this.NewNoteDropShadow = (global::Microsoft.Toolkit.Uwp.UI.Controls.DropShadowPanel)(target);
#pragma warning restore 0618
                }
                break;
            case 22: // View\HomePage.xaml line 272
                {
                    this.NewNote = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 23: // View\HomePage.xaml line 285
                {
                    this.TitleOfNewNote = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                    ((global::Windows.UI.Xaml.Controls.TextBox)this.TitleOfNewNote).LosingFocus += this.TitleOfNewNote_LosingFocus;
                    ((global::Windows.UI.Xaml.Controls.TextBox)this.TitleOfNewNote).LostFocus += this.TitleOfNewNote_LostFocus;
                }
                break;
            case 24: // View\HomePage.xaml line 304
                {
                    this.ContentOfNewNote = (global::Windows.UI.Xaml.Controls.RichEditBox)(target);
                }
                break;
            case 25: // View\HomePage.xaml line 316
                {
                    this.NoteStyleOptions = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 26: // View\HomePage.xaml line 327
                {
                    this.NoteEditOptions = (global::UWPYourNote.View.usercontrol.NoteEditOptionsControl)(target);
                }
                break;
            case 27: // View\HomePage.xaml line 334
                {
                    this.CreationButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 28: // View\HomePage.xaml line 104
                {
                    this.MainMenuOptions = (global::Windows.UI.Xaml.Controls.ListBox)(target);
                }
                break;
            case 29: // View\HomePage.xaml line 134
                {
                    this.TitleSearchBoxContainer = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 30: // View\HomePage.xaml line 149
                {
                    this.NoteSearchButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.NoteSearchButton).Click += this.NoteSearchButton_Click;
                }
                break;
            case 31: // View\HomePage.xaml line 168
                {
                    this.Settings = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 32: // View\HomePage.xaml line 186
                {
                    this.SettingsFlyout = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                }
                break;
            case 33: // View\HomePage.xaml line 209
                {
                    this.Welcome = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 34: // View\HomePage.xaml line 217
                {
                    this.Appearence = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 37: // View\HomePage.xaml line 141
                {
                    this.TitleSearchBox = (global::UWPYourNote.View.usercontrol.NoteTitleSearchBox)(target);
                    ((global::UWPYourNote.View.usercontrol.NoteTitleSearchBox)this.TitleSearchBox).UserControlLostFocus += this.TitleSearchBox_SearchTextBoxLostFocus;
                }
                break;
            case 38: // View\HomePage.xaml line 115
                {
                    this.PersonalNotes = (global::Windows.UI.Xaml.Controls.ListBoxItem)(target);
                }
                break;
            case 39: // View\HomePage.xaml line 120
                {
                    this.SharedNotes = (global::Windows.UI.Xaml.Controls.ListBoxItem)(target);
                }
                break;
            case 40: // View\HomePage.xaml line 125
                {
                    this.AllNotes = (global::Windows.UI.Xaml.Controls.ListBoxItem)(target);
                }
                break;
            case 41: // View\HomePage.xaml line 86
                {
                    this.AppLogo = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 42: // View\HomePage.xaml line 94
                {
                    this.AppName = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // View\HomePage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    HomePage_obj1_Bindings bindings = new HomePage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 3: // View\HomePage.xaml line 49
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element3 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    HomePage_obj3_Bindings bindings = new HomePage_obj3_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element3.DataContext);
                    element3.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element3, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element3, bindings);
                }
                break;
            case 7: // View\HomePage.xaml line 28
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element7 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    HomePage_obj7_Bindings bindings = new HomePage_obj7_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element7.DataContext);
                    element7.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element7, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element7, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

